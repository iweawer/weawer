/*
 * generated by Xtext 2.10.0
 */
package ru.weawer.ww.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import java.util.List
import com.google.common.collect.Lists
import org.eclipse.emf.ecore.resource.ResourceSet

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class WwDslGenerator extends AbstractGenerator {

	private final List<Object> generators = Lists::newArrayList();

	def public void doGenerate(List<String> languages, List<String> packages, ResourceSet resourceSet, IFileSystemAccess2 fsa) {
		languages.forEach[doGenerate(packages, resourceSet, fsa)]
	} 
	
	def private void doGenerate(String language, List<String> packages, ResourceSet resourceSet, IFileSystemAccess2 fsa) {
		generators.forEach[{
			val Object generator = it; 
			it.class.declaredMethods
			.filter[getAnnotation(typeof(Generate)) != null && language.equals(it.getAnnotation(typeof(Generate)).value)]
			.filter[parameterCount >= 3]
			.filter[typeof(List).isAssignableFrom(parameters.get(0).type)]
			.filter[typeof(ResourceSet).isAssignableFrom(parameters.get(1).type)]
			.filter[typeof(IFileSystemAccess2).isAssignableFrom(parameters.get(2).type)]
			.forEach[
				try {
					info("Call generator " + generator + "." + it.name)
					invoke(generator, packages, resourceSet, fsa)
					info("Call generator " + generator + ". Done")
				} catch(Exception e) {
					error("Failed to run generator " + generator + ": " + e.toString())
					e.printStackTrace()
				}
			]
		}]
	}

	// doGenerate(String revision, ResourceSet resourceSet, IFileSystemAccess2 fsa)

	def public void registerGenerator(Object o) {
		generators.add(o);
	}
	
	def private void info(String message) {
		System.out.println("INFO " + message)
	}
	
	def private void error(String message) {
		System.err.println("ERROR " + message)
	}

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		println(resource)
	}
}
